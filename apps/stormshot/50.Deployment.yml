apiVersion: apps/v1
kind: Deployment
metadata:
  name: stormshot
  namespace: stormshot
  labels:
    app.kubernetes.io/component: stormshot
    app.kubernetes.io/name: stormshot
    prometheus.monitoring/service: nginx-exporter
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: stormshot
      app.kubernetes.io/name: stormshot
      prometheus.monitoring/service: nginx-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/component: stormshot
        app.kubernetes.io/name: stormshot
        prometheus.monitoring/service: nginx-exporter
    spec:
      volumes:
        - name: var-storage
          emptyDir: {}
        - name: run-storage
          emptyDir: {}
        - name: stormshot-storage
          persistentVolumeClaim:
             claimName: pvc-stormshot
        - name: web-metrics
          configMap:
            name: web-metrics
            defaultMode: 420
        - name: nginx-exporter-storage
          emptyDir: {}
      containers:
        - name: stormshot
          image:  s2.ubuntu.home:5000/docker.io/nginx:1.22.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: stormshot
              containerPort: 80
              protocol: TCP
#            - name: metrics
#              containerPort: 8080
#              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: run-storage
              mountPath: /var/run
            - name: var-storage
              mountPath: /var/cache/nginx
            - name: stormshot-storage
              mountPath: /usr/share/nginx/html
              subPath: stormshot
            - mountPath: /etc/nginx/conf.d/metrics.conf
              name: web-metrics
              subPath: metrics.conf
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - name: nginx-exporter
          command:
            - nginx-prometheus-exporter
            - -nginx.scrape-uri=http://127.0.0.1:8080/metrics
          image: s2.ubuntu.home:5000/docker.io/nginx/nginx-prometheus-exporter:1.3.0
          ports:
            - name: metrics
              containerPort: 9113
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: nginx-exporter-storage
              mountPath: /etc/nginx-exporter
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: stormshot
      serviceAccount: stormshot
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
