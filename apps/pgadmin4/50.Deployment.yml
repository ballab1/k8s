kind: Deployment
apiVersion: apps/v1
metadata:
  name: pgadmin4
  namespace: pgadmin4
  labels:
    app.kubernetes.io/component: pgadmin4
    app.kubernetes.io/name: pgadmin4
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: pgadmin4
      app.kubernetes.io/name: pgadmin4
  template:
    metadata:
      labels:
        app.kubernetes.io/component: pgadmin4
        app.kubernetes.io/name: pgadmin4
    spec:
      volumes:
        - name: config
          configMap:
            name: pgadmin4-config
        - name: pgadmin4-storage
          persistentVolumeClaim:
            claimName: pvc-pgadmin4
            readOnly: false
      containers:
        - name: pgadmin4
          image:  s2.ubuntu.home:5000/docker.io/dpage/pgadmin4:8.12
          envFrom:
          env:
            - name: USER
              value: pgadmin
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: pgadmin4
                  key: username
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin4
                  key: password
          ports:
            - name: pgadmin4
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /pgadmin4/config_local.py
              subPath: config_local.py
              readOnly: true
            - name: config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
            - name: pgadmin4-storage
              mountPath: /var/lib/pgadmin
#              subPath: pgadmin4
              readOnly: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 5050
        runAsUser: 5050
        runAsGroup: 5050
      serviceAccountName: pgadmin4
      serviceAccount: pgadmin4
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
