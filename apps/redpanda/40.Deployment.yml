kind: Deployment
apiVersion: apps/v1
metadata:
  name: redpanda
  namespace: redpanda
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/name: redpanda
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda
      app.kubernetes.io/name: redpanda
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      volumes:
        - name: config-yml
          configMap:
            name: config-yml
      containers:
        - name: redpanda
          command:
            - '/app/console'
          args:
            - '--config.filepath=/app/config/config.yml'
          image: s2.ubuntu.home:5000/thirdparty/console:v2.3.7
          ports:
            - name: redpanda
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config-yml
              mountPath: /app/config/config.yml
              subPath: config.yml
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: redpanda
      serviceAccount: redpanda
      securityContext:
        runAsUser: 65534
        runAsNonRoot: false
        fsGroup: 65534
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
