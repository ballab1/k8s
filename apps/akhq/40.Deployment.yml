kind: Deployment
apiVersion: apps/v1
metadata:
  name: akhq
  namespace: akhq
  labels:
    app.kubernetes.io/component: akhq
    app.kubernetes.io/name: akhq
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: akhq
      app.kubernetes.io/name: akhq
  template:
    metadata:
      labels:
        app.kubernetes.io/component: akhq
        app.kubernetes.io/name: akhq
    spec:
      volumes:
        - name: application-yml
          configMap:
            name: application-yml
        - name: jvm-options
          configMap:
            name: jvm-options
      containers:
        - name: akhq
          image: s2.ubuntu.home:5000/thirdparty/akhq:0.22.0
          env:
            - name: KAFKA_BROKERS
              value: 's3.ubuntu.home:9092,s4.ubuntu.home:9092,s6.ubuntu.home:9092'
            - name: MICRONAUT_CONFIG_FILES
              value: /app/conf/application.yml
            - name: JVM_OPTS_FILE
              value: /app/conf/jvm.options
          ports:
            - name: akhq
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: application-yml
              mountPath: /app/conf/application.yml
              subPath: application.yml
            - name: jvm-options
              mountPath: /app/conf/jvm.options
              subPath: jvm.options
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: akhq
      serviceAccount: akhq
      securityContext:
        runAsUser: 65534
        runAsNonRoot: false
        fsGroup: 65534
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
