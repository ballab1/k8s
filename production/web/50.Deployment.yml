kind: Deployment
apiVersion: apps/v1
metadata:
  name: web
  namespace: web
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/name: web
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: web
  template:
    metadata:
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/name: web
    spec:
      volumes:
        - name: var-storage
          emptyDir: {} 
        - name: run-storage
          emptyDir: {}
        - name: web-storage
          persistentVolumeClaim:
             claimName: nas-web
      containers:
        - name: web
          image:  s2.ubuntu.home:5000/thirdparty/nginx:1.20.2
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: run-storage
              mountPath: /var/run 
            - name: var-storage
              mountPath: /var/cache/nginx 
            - name: web-storage
              mountPath: /usr/share/nginx/html
              subPath: web
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent 
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: web
      serviceAccount: web
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600 